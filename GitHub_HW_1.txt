GitHub_HW_1
                

                       JSON

1) Создать внешний репозиторий c названием JSON:

-перейти на сайт https://github.com/
-авторизоваться в своем профиле VictorL10
-в левом верхнем углу нажать кнопку "New"
-в поле "Repository name" ввести название репозитория JSON
-выбрать радиобаттон"Public"
-нажать кнопку "Create repositiry"
==========================================================================================================================================================================================

2) Клонировать репозиторий JSON на локальный компьютер: 

-перейти на удаленный репозиторий JSON
-нажать кнопку "Code" 
-в появившемся окне выбрать вкладку SSH и скопировать ссылку git@github.com:VictorL10/JSON.git
-зайти локально в рабочую папку "MyGit" и открыть в ней Git-bash
-создать на ПК в папке "MyGit" клон репозитория использую команду: 

	git clonne git@github.com:VictorL10/JSON.git

==========================================================================================================================================================================================

3)Внутри локального репозитория JSON создать файл new.json:

	cat > new.json	

==========================================================================================================================================================================================

4) Добавить файл под гит:

	git add new.json

==========================================================================================================================================================================================

5) Закомитить файл:

	git commit -m "json"

==========================================================================================================================================================================================

6) Отправить файл на внешний GitHub репозиторий:

	git push 

==========================================================================================================================================================================================

7)Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON:
-ввести команду vim new.json
-нажать кнопку "I" для перехода в режим редактирования
-ввести информацию о себе в формате JSON:

{ 
"information about yourself":
[
	{"Full name":"Victor_L"},
	{"Age":32},
	{"number of pets":"one pet"},
	{"desired Salary":500}
]
  }

-для выхода из режима редактирования нажать кнопку "Esc"
-нажать кнопку "Shift" и ввести :wq для сохранения и возврата в терминал

==========================================================================================================================================================================================

8)Отправить изменения на внешний репозиторий:

	git add new.json
	git commit -m "information"
	git push

==========================================================================================================================================================================================

9)Создать файл preferences.json:

	cat > preferences.json

==========================================================================================================================================================================================

10)В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON:
-ввести команду vim preferences.json
-нажать кнопку "I" для перехода в режим редактирования
-ввести информацию о предпочтениях в формате JSON:

{ "Information about preferences":
        [
        {"Favorite Movie": "Pirates of the Caribbean"},
        {"Favorite series": "Clinic"},
        {"Favorite food": "Caesar salad"},
        {"country I would like to visit": "Switzerland"}
        ]
}

-для выхода из режима редактирования нажать кнопку "Esc"
-нажать кнопку "Shift" и ввести :wq для сохранения и возврата в терминал

==========================================================================================================================================================================================

11) Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON:

	cat > sklls.json

-ввести команду vim sklls.json
-нажать кнопку "I" для перехода в режим редактирования
-ввести информацию о скиллах в формате JSON:

{ "skills":
[
        "Terminal",
	"GIT",
	"Postman",
        "Jmeter",
        "Mobile Testing",
        "Android Studio",
        "Fiddler",
        "Charles",
        "Client Server",
        "SQL",
        "ADB",
        "XCode"
]
}

-для выхода из режима редактирования нажать кнопку "Esc"
-нажать кнопку "Shift" и ввести :wq для сохранения и возврата в терминал

==========================================================================================================================================================================================

12) Отправить сразу 2 файла на внешний репозиторий:

	git add sklls.json preferences.json 
	git commit -m "add sklls and preferences"
	git push

==========================================================================================================================================================================================

13) На веб интерфейсе создать файл bug_report.json: 
-на сайте https://github.com/ в своем аккаунте перейти в репозирорий JSON 
-нажать кнопку "Add file"
-выбрать "Create new file"
-в поле "Name your file" ввести название bug_report.json
-нажать на кнопку "Commit changes"

==========================================================================================================================================================================================

14) Сделать Commit changes (сохранить) изменения на веб интерфейсе:
-нажать на кнопку "Commit changes"

==========================================================================================================================================================================================

15)На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON:
-перейти в файл bug_report.json в удаленном репозитории JSON
-выбрать режим редактирования файла нажав на кнопку с изображением "карандаша"
-ввести данные баг-репорта в формате JSON

{
	"ID": "10",
	"Title": "Товар не добавляется в корзину",
	"Project": " newshop",
	"STR": 
	[
		"1. Перейти на сайт 'newshop.com' как авторизованный пользователь",
    		"2. Выбрать вкладку 'Каталог' в предложенном списке",
		"3. На вкладке 'Каталог' выбрать любой товар с помощью чек-бокса", 
    		"4. Нажать кнопку 'довабить' для добавления товара в корзину",
    		"5. Осуществить переход в корзину",
    		"6. Обратить внимание на отсутвие выбранного товара в корзине"
	],
	"Enviroment":
	{
		"OS": "Windows 11 Pro x64 build 22621",
		"Browser": "Google Chrome 115.0.5790.173 x64"
	},
	"Component": "Кнопка 'Добавить'",
	"Build": "0.3.5",
	"Actual result": "Нажатие кнопки 'Добавить' не добавляет товар в корзину",
	"Expected result": "Нажатие кнопки 'Добавить' добавляет выбранный товар в корзину",
	"Severity": "Critical",
	"Priority": "High",
	"Status": "Open",
	"Author": "Victor_L",
	"Attachments": "ссылка на картинку или видео с багом"
}

==========================================================================================================================================================================================

16)Сделать Commit changes (сохранить) изменения на веб интерфейсе:
-нажать на кнопку Commit changes после изменения файла bug_report.json 

==========================================================================================================================================================================================
17)Синхронизировать внешний и локальный репозиторий JSON:
-перейти в Terminal
-ввести команду git pull
==========================================================================================================================================================================================


||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


                  XML



1) Создать внешний репозиторий c названием XML:

-перейти на сайт https://github.com/
-авторизоваться в своем профиле VictorL10
-в левом верхнем углу нажать кнопку "New"
-в поле "Repository name" ввести название репозитория XML
-выбрать радиобаттон "Public"
-нажать кнопку "Create repositiry"
==========================================================================================================================================================================================

2) Клонировать репозиторий XML на локальный компьютер: 

-перейти на удаленный репозиторий XML
-нажать кнопку "Code" 
-выбрать вкладку SSH и скопировать ссылку git@github.com:VictorL10/XML.git
-зайти локально в рабочую папку "MyGit" и открыть в ней Git-bash
-создать на ПК в папке "MyGit" клон репозитория использую команду:

	git clonne git@github.com:VictorL10/XML.git
==========================================================================================================================================================================================

3)Внутри локального репозитория XML создать файл new.xml:

	cat > new.xml	

==========================================================================================================================================================================================

4) Добавить файл под гит:

	git add new.xml

==========================================================================================================================================================================================

5) Закомитить файл:

	git commit -m "add xml"

==========================================================================================================================================================================================

6) Отправить файл на внешний GitHub репозиторий:

	git push 

==========================================================================================================================================================================================

7)Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML:
-ввести команду vim new.xml
-нажать кнопку "I" для перехода в режим редактирования
-ввести информацию о себе в формате XML:

<?xml version="1.0" encoding="UTF-8"?>
<root>
        <name>Victor_L</name>
        <age>32</age>
        <pets>1</pets>
        <salary>500</salary>
</root>

-для выхода из режима редактирования нажать кнопку "Esc"
-нажать кнопку "Shift" и ввести :wq для сохранения и возврата в терминал

==========================================================================================================================================================================================

8)Отправить изменения на внешний репозиторий:

	git add new.xml
	git commit -m "information"
	git push

==========================================================================================================================================================================================

9)Создать файл preferences.xml:

	cat > preferences.xml

==========================================================================================================================================================================================

10)В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML:
-ввести команду vim preferences.xml
-нажать кнопку "I" для перехода в режим редактирования
-ввести информацию о предпочтениях в формате XML:

<?xml version="1.0" encoding="UTF-8"?>
<root>
        <Favorite_Movie>>Pirates of the Caribbean</Favorite_Movie>
        <Favorite_series>Clinic</Favorite_series>
        <Favorite_food>Caesar_salad</Favorite_food>
        <country_I_would_like_to_visit>Switzerland</country_I_would_like_to_visit>
</root>

-для выхода из режима редактирования нажать кнопку "Esc"
-нажать кнопку "Shift" и ввести :wq для сохранения и возврата в терминал

==========================================================================================================================================================================================

11) Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML:

	cat > sklls.xml

-ввести команду vim sklls.xml
-нажать кнопку "I" для перехода в режим редактирования
-ввести информацию о скиллах в формате XML:

<?xml version="1.0" encoding="UTF-8"?>
<root>
	<Skill1>Postman</Skill1>
	<Skill2>Jmeter</Skill2>
	<Skill3>Mobile_Testing</Skill3>
	<Skill4>Android_Studio</Skill4>
	<Skill5>Fiddler</Skill5>
	<Skill6>Charles</Skill6>
	<Skill7>Client_Server</Skill7>
	<Skill8>SQL</Skill8>
	<Skill9>ADB</Skill9>
	<Skill10>XCode</Skill10>
</root>

-для выхода из режима редактирования нажать кнопку "Esc"
-нажать кнопку "Shift" и ввести :wq для сохранения и возврата в терминал

==========================================================================================================================================================================================

12) Отправить сразу 2 файла на внешний репозиторий:

	git add sklls.xml preferences.xml 
	git commit -m "add sklls and preferences"
	git push

==========================================================================================================================================================================================

13) На веб интерфейсе создать файл bug_report.xml: 
-на сайте https://github.com/ в своем аккаунте перейти в репозирорий XML 
-нажать кнопку "Add file"
-выбрать "Create new file"
-в поле "Name your file" ввести название bug_report.xml
-нажать на кнопку "Commit changes"

==========================================================================================================================================================================================

14) Сделать Commit changes (сохранить) изменения на веб интерфейсе:
-нажать на кнопку Commit changes

==========================================================================================================================================================================================

15)На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате xml:
-перейти в файл bug_report.xml в удаленном репозитории XML
-выбрать режим редактирования файла нажав на кнопку с изображением "карандаша"
-ввести данные баг-репорта в формате XML

<?xml version="1.0" encoding="UTF-8"?>
<root>
    <ID>10</ID>
    <Title>Товар не добавляется в корзину</Title>
    <Project>newshop</Project>
    <Steps>
       <Step_1>Перейти на сайт 'newshop.com' как авторизованный пользователь</Step_1>
       <Step_2>Выбрать вкладку 'Каталог' в предложенном списке</Step_2>
       <Step_3>На вкладке 'Каталог' выбрать любой товар с помощью чек-бокса</Step_3>
       <Step_4>ажать кнопку 'довабить' для добавления товара в корзину</Step_4>
       <Step_5>Осуществить переход в корзину</Step_5>
       <Step_6>Обратить внимание на отсутвие выбранного товара в корзине</Step_6>
    </Steps>
    <Enviroment>
        <OS>Windows 11 Pro x64 build 22621</OS>
        <Browser>Google Chrome 115.0.5790.173 х64</Browser>
    </Enviroment>
    <Component>Кнопка "Добавить"</Component>
    <Build>0.3.5</Build>
    <Actual_result>Нажатие кнопки 'Добавить' не добавляет товар в корзину</Actual_result>
    <Expected_result>ажатие кнопки 'Добавить' добавляет выбранный товар в корзину</Expected_result>
    <Severity>Critical</Severity>
    <Priority>High</Priority>
    <Status>Open</Status>
    <Author>Victor_L</Author>
    <Attachments>Cсылка на картинку или видео с багом</Attachments>
</root>

==========================================================================================================================================================================================

16)Сделать Commit changes (сохранить) изменения на веб интерфейсе:
-нажать на кнопку Commit changes после изменения файла bug_report.xml 

==========================================================================================================================================================================================
17)Синхронизировать внешний и локальный репозиторий XML:
-перейти в Terminal
-ввести команду git pull
==========================================================================================================================================================================================

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


                     TXT




1) Создать внешний репозиторий c названием TXT:

-перейти на сайт https://github.com/
-авторизоваться в своем профиле VictorL10
-в левом верхнем углу нажать кнопку "New"
-в поле "Repository name" ввести название репозитория TXT
-выбрать радиобаттон "Public"
-нажать кнопку "Create repositiry"
==========================================================================================================================================================================================

2) Клонировать репозиторий TXT на локальный компьютер: 

-перейти на удаленный репозиторий TXT
-нажать кнопку "Code" 
-выбрать вкладку SSH и скопировать ссылку git@github.com:VictorL10/TXT.git
-зайти локально в рабочую папку "MyGit" и открыть в ней Git-bash
-создать на ПК в папке "MyGit" клон репозитория использую команду:

	git clonne git@github.com:VictorL10/TXT.git
==========================================================================================================================================================================================

3)Внутри локального репозитория TXT создать файл new.txt:

	touch new.txt	

==========================================================================================================================================================================================

4) Добавить файл под гит:

	git add new.txt

==========================================================================================================================================================================================

5) Закомитить файл:

	git commit -m "add txt"

==========================================================================================================================================================================================

6) Отправить файл на внешний GitHub репозиторий:

	git push 

==========================================================================================================================================================================================

7)Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT:
-ввести команду vim new.txt
-нажать кнопку "I" для перехода в режим редактирования
-ввести информацию о себе в формате TXT:

	Name:Victor_L
	Age:32
	Pets:1
	Salary:500

-для выхода из режима редактирования нажать кнопку "Esc"
-нажать кнопку "Shift" и ввести :wq для сохранения и возврата в терминал

==========================================================================================================================================================================================

8)Отправить изменения на внешний репозиторий:

	git add new.txt
	git commit -m "information"
	git push

==========================================================================================================================================================================================

9)Создать файл preferences.txt:

	touch preferences.txt

==========================================================================================================================================================================================

10)В файл preferences.txt добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT:
-ввести команду vim preferences.txt
-нажать кнопку "I" для перехода в режим редактирования
-ввести информацию о предпочтениях в формате TXT:

	Favorite Movie:Pirates of the Caribbean
	Favorite series:Clinic
	Favorite food:Caesar salad
	Country I would like to visit:Switzerland

-для выхода из режима редактирования нажать кнопку "Esc"
-нажать кнопку "Shift" и ввести :wq для сохранения и возврата в терминал

==========================================================================================================================================================================================

11) Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT:

	touch sklls.txt

-ввести команду vim sklls.txt
-нажать кнопку "I" для перехода в режим редактирования
-ввести информацию о скиллах в формате TXT:

	Skill_1:Postman
	Skill_2:meter
	Skill_3:Mobile Testing
	Skill_4:Android Studio
	Skill_5:Fiddler
	Skill_6:Charles
	Skill_7:Client Server
	Skill_8:SQL
	Skill_9:ADB
	Skill_10:XCode


-для выхода из режима редактирования нажать кнопку "Esc"
-нажать кнопку "Shift" и ввести :wq для сохранения и возврата в терминал

==========================================================================================================================================================================================

12) Сделать коммит в одну строку:

	git commit -am "one string"

==========================================================================================================================================================================================


13) Отправить сразу 2 файла на внешний репозиторий:

	git add sklls.txt preferences.txt 
	git commit -m "add sklls and preferences"
	git push

==========================================================================================================================================================================================

14) На веб интерфейсе создать файл bug_report.txt: 
-на сайте https://github.com/ в своем аккаунте перейти в репозирорий TXT 
-нажать кнопку "Add file"
-выбрать "Create new file"
-в поле "Name your file" ввести название bug_report.txt
-нажать на кнопку "Commit changes"

==========================================================================================================================================================================================

15) Сделать Commit changes (сохранить) изменения на веб интерфейсе:
-нажать на кнопку Commit changes

==========================================================================================================================================================================================

16)На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате txt:
-перейти в файл bug_report.txt в удаленном репозитории TXT
-выбрать режим редактирования файла нажав на кнопку с изображением "карандаша"
-ввести данные баг-репорта в формате TXT

ID:10
Build:0.3.5
Severity:Critical
Priority:High
Status:Open
Author:Victor_L

Title:Товар не добавляется в корзину
Project:newshop

  Steps:
    1.Перейти на сайт 'newshop.com' как авторизованный пользователь.
    2.Выбрать вкладку 'Каталог' в предложенном списке.
    3.На вкладке 'Каталог' выбрать любой товар с помощью чек-бокса.
    4.Нажать кнопку 'довабить' для добавления товара в корзину.
    5.Осуществить переход в корзину.
    6.Обратить внимание на отсутвие выбранного товара в корзине.

Enviroment:
  OS>Windows 11 Pro x64 build 22621
  Browser>Google Chrome 115.0.5790.173 х64

Component: Кнопка "Добавить".

Actual_result:нажатие кнопки 'Добавить' не добавляет товар в корзину.

Expected_result:нажатие кнопки 'Добавить' добавляет выбранный товар в корзину.

Attachments:ссылка на картинку или видео с багом.
==========================================================================================================================================================================================

17)Сделать Commit changes (сохранить) изменения на веб интерфейсе:
-нажать на кнопку Commit changes после изменения файла bug_report.txt 

==========================================================================================================================================================================================
18)Синхронизировать внешний и локальный репозиторий TXT:
-перейти в Terminal
-ввести команду git pull